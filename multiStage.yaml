# Built-test-staging-prod pipeline

# Only run against master
trigger:
- master

# Don't run against PRs
pr: none

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
stages:
- stage: build
  jobs:
  - job: run_build
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo Build
    - task: GoTool@0
      displayName: 'Use Go 1.10'

    - task: Go@0
      displayName: 'go get'
      inputs:
        arguments: '-d'

    - task: Go@0
      displayName: 'go build'
      inputs:
        command: build
        arguments: '-o "$(System.TeamProject).exe"'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.Repository.LocalPath)'
        includeRootFolder: False
        - task: PublishPipelineArtifact@1
          inputs: 
            targetPath: $(System.DefaultWorkingDirectory)/bin/goApp
            artifactName: goApp

- stage: test
  dependsOn: build
  jobs:
  - job: run_tests
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo Test
    
- stage: staging
  dependsOn: test
  displayName: ebiiiiiiiiiiiiiii
  jobs:
  - deployment: deploy_staging
    displayName: ebiiiiii
    environment: Staging
    strategy:
        runOnce:
            deploy:
                steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifact: goApp

- stage: prod
  dependsOn: staging
  jobs:
  - job: deploy_prod
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: echo Prod
